<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.lxb.blog.dao.BlogDao">

    <resultMap type="Blog" id="BlogResult">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="releaseDate" column="releaseDate"/>
        <result property="clickHit" column="clickHit"/>
        <result property="replyHit" column="replyHit"/>
        <result property="content" column="content"/>
        <result property="keyWord" column="keyWord"/>
        <association property="blogType" column="typeId" select="cn.lxb.blog.dao.BlogTypeDao.findById"/>
    </resultMap>

    <sql id="t_blog"> id, title, summary, releaseDate, clickHit, replyHit, content, typeId, keyWord</sql>

    <select id="countList" resultMap="BlogResult">
        SELECT DATE_FORMAT(releaseDate,'%Y-%m-%d')
        AS releaseDateStr ,
        COUNT(*) AS blogCount
        FROM t_blog
        GROUP BY DATE_FORMAT(releaseDate,'%Y-%m-%d')
        ORDER BY DATE_FORMAT(releaseDate,'%Y-%m-%d') DESC;
    </select>

    <select id="list" parameterType="java.util.Map" resultMap="BlogResult">
        SELECT <include refid="t_blog"/>
        FROM t_blog
        <where>
            <if test="title != null and !&quot;&quot;.equals(title.trim())">
                AND title LIKE #{title}
            </if>
            <if test="typeId != null and !&quot;&quot;.equals(typeId.trim())">
                AND typeId = #{typeId}
            </if>
            <if test="releaseDateStr != null and !&quot;&quot;.equals(releaseDateStr.trim())">
                AND DATE_FORMAT(releaseDate,'%Y-%m-%d') = #{releaseDateStr}
            </if>
        </where>
        ORDER BY releaseDate DESC
        <if test="start != null and size != null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getTotal" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_blog
        <where>
            <if test="typeId != null">
                AND typeId = #{typeId}
            </if>
            <if test="title != null and !&quot;&quot;.equals(title.trim())">
                AND title like #{title}
            </if>
            <if test="releaseDateStr != null and !&quot;&quot;.equals(releaseDateStr.trim())">
                AND DATE_FORMAT(releaseDate,'%Y-%m-%d') = #{releaseDateStr}
            </if>
        </where>
    </select>

    <select id="findById" parameterType="java.lang.Integer" resultMap="BlogResult">
        SELECT <include refid="t_blog"/>
        FROM t_blog
        WHERE id = #{id}
    </select>

    <update id="addClickHit" parameterType="java.lang.Integer">
        UPDATE t_blog
        SET clickHit = clickHit + 1
        WHERE id = #{id}
    </update>

    <update id="update" parameterType="Blog">
        UPDATE t_blog
        <set>
            <if test="title != null and !&quot;&quot;.equals(title.trim())">
                title = #{title},
            </if>
            <if test="summary != null and !&quot;&quot;.equals(summary.trim())">
                summary = #{summary},
            </if>
            <if test="content != null and !&quot;&quot;.equals(content.trim())">
                content = #{content},
            </if>
            <if test="keyWord != null and !&quot;&quot;.equals(keyWord.trim())">
                keyWord = #{keyWord},
            </if>
            <if test="clickHit != null">
                clickHit = #{clickHit},
            </if>
            <if test="replyHit != null">
                replyHit = #{replyHit},
            </if>
            <if test="blogType.id != null">
                typeId = #{blogType.id}
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <select id="getLastBlog" parameterType="java.lang.Integer" resultMap="BlogResult">
        SELECT <include refid="t_blog"/>
        FROM t_blog
        WHERE id &lt; #{id}
        ORDER BY id
        DESC LIMIT 1
    </select>

    <select id="getNextBlog" parameterType="java.lang.Integer" resultMap="BlogResult">
        SELECT <include refid="t_blog"/>
        FROM t_blog
        WHERE id &gt; #{id}
        ORDER BY id
        ASC LIMIT 1
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Blog">
        INSERT INTO t_blog
        VALUES(null, #{title}, #{summary}, now(), 0, 0, #{content}, #{blogType.id}, #{keyWord})
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM t_blog WHERE id = #{id}
    </delete>

    <select id="getBlogByTypeId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM t_blog
        WHERE typeId = #{typeId}
    </select>

    <select id="getBlogIds" resultType="java.lang.String">
        SELECT id FROM t_blog
    </select>

</mapper>